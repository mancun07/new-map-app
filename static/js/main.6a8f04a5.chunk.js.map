{"version":3,"sources":["components/Info.module.scss","components/Loader.module.scss","components/Marker.module.scss","app/countrySlice.js","components/Marker.js","app/actions.js","components/Map.js","components/Header.js","components/Loader.js","components/Info.js","App.js","app/store.js","serviceWorker.js","index.js","components/Header.module.scss"],"names":["module","exports","countrySlice","createSlice","name","initialState","items","infoIsShown","chosenCountry","filteredItems","menuIsShown","reducers","addDataToRedux","state","action","payload","showInfo","hideInfo","setChosenCountry","clearChosenCountry","filterByQuantity","console","log","filter","el","population","filterByLanguage","langs","languages","Object","values","includes","toggleMenu","countryActions","actions","Marker","props","dispatch","useDispatch","clickHandler","a","fetchSingleData","fetch","response","ok","Error","json","data","getSingleData","className","classes","marker","onClick","style","color","padding","Map","useSelector","country","itemsToMap","map","i","lat","latlng","lng","common","flag","flags","svg","filteredItemsToMap","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","Header","useEffect","window","innerWidth","uniqueLanguages","arr","newArr","push","onlyUnique","arr2","length","slice","header","hamb__button","navbar","navbar__isShown","navbar__item","htmlFor","id","onChange","e","value","target","defaultValue","disabled","Loader","loading","Info","convertedNumbersPopulation","numberWithSpaces","number","toString","replace","area","motion","div","initial","y","animate","info","title","src","main","capital","car","side","currencies","symbol","timezones","App","fetchData","store","configureStore","reducer","countryReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a8f04a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__dlHDJ\",\"title\":\"Info_title__23vvG\",\"main\":\"Info_main__C8X_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loader_loading__hpWF4\",\"lds-dual-ring\":\"Loader_lds-dual-ring__13xfL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marker\":\"Marker_marker__1CI2s\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const countrySlice = createSlice({\r\n    name: 'counter',\r\n    initialState: {\r\n        items: [],\r\n        infoIsShown: false,\r\n        chosenCountry: null,\r\n        filteredItems: null,\r\n        menuIsShown: false\r\n    },\r\n    reducers: {\r\n        addDataToRedux: (state, action) => {\r\n            state.items = action.payload\r\n        },\r\n        showInfo: (state, action) => {\r\n            state.infoIsShown = true\r\n        },\r\n        hideInfo: (state, action) => {\r\n            state.infoIsShown = false\r\n        },\r\n        setChosenCountry: (state, action) => {\r\n            state.chosenCountry = action.payload\r\n        },\r\n        clearChosenCountry: (state, action) => {\r\n            state.chosenCountry = null\r\n        },\r\n        filterByQuantity: (state, action) => {\r\n            console.log(action.payload)\r\n            state.filteredItems = state.items.filter(el => {\r\n                return el.population > action.payload\r\n            })\r\n        },\r\n        filterByLanguage: (state, action) => {\r\n            state.filteredItems = state.items && state.items.filter(el => {\r\n                let langs = el.languages && Object.values(el.languages)\r\n         \r\n                return langs && langs.includes(action.payload)\r\n            })\r\n        },\r\n        toggleMenu: (state, action) => {\r\n            state.menuIsShown = !state.menuIsShown\r\n        }\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const countryActions = countrySlice.actions;\r\n\r\nexport default countrySlice.reducer;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux';\r\nimport { countryActions } from '../app/countrySlice';\r\nimport { getSingleData } from '../app/actions';\r\nimport classes from './Marker.module.scss'\r\n\r\nconst Marker = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const clickHandler = (name) => {\r\n        dispatch(countryActions.showInfo())\r\n        dispatch(getSingleData(name))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.marker} onClick={() => clickHandler(props.name)}>\r\n            <i className=\"fas fa-map-pin\" style={{color: 'yellow', padding: '10px'}}></i>\r\n            {/* <img src={props.flag} alt=\"marker\"/>  */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Marker\r\n","import {countryActions} from './countrySlice';\r\n\r\nexport const getData = () => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n            const response = await fetch(`https://restcountries.com/v3.1/all`);\r\n            if (!response.ok) {\r\n                throw new Error('Our customs error')\r\n            }\r\n            const data = await response.json();\r\n            dispatch(countryActions.addDataToRedux(data))\r\n            // console.log(data)\r\n            \r\n        }\r\n\r\n        try {\r\n            await fetchData();\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const getSingleData = (name) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchSingleData = async () => {\r\n            const response = await fetch(`https://restcountries.com/v3.1/name/${name}`);\r\n            if (!response.ok) {\r\n                throw new Error('Our customs error')\r\n            }\r\n            const data = await response.json();\r\n            console.log(data)\r\n            dispatch(countryActions.setChosenCountry(data))\r\n        }\r\n\r\n        try {\r\n            await fetchSingleData()\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from './Marker';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Map = (props) => {\r\n\r\n  const items = useSelector(state => state.country.items)\r\n  const filteredItems = useSelector(state => state.country.filteredItems)\r\n  // console.log(items)\r\n\r\n  const itemsToMap = items.map((el,i) => {\r\n    return <Marker key={i}\r\n    lat={el.latlng[0]}\r\n    lng={el.latlng[1]}\r\n    // lat={59.955413}\r\n    // lng={30.337844}\r\n    name={el.name.common}\r\n    flag={el.flags.svg}\r\n    // text=\"My Marker\"\r\n  />\r\n})\r\n\r\n  const filteredItemsToMap = filteredItems && filteredItems.map((el,i) => {\r\n    return <Marker key={i}\r\n    lat={el.latlng[0]}\r\n    lng={el.latlng[1]}\r\n    // lat={59.955413}\r\n    // lng={30.337844}\r\n    name={el.name.common}\r\n    flag={el.flags.svg}\r\n    // text=\"My Marker\"\r\n  />\r\n})\r\n\r\n\r\n    return (\r\n           // Important! Always set the container height explicitly\r\n      <div style={{ height: '100vh', width: '100%'}}>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: '' }}\r\n        defaultCenter={{lat: 59.95, lng: 30.33}}\r\n        defaultZoom={3}\r\n      >\r\n        {!filteredItems ? itemsToMap : filteredItemsToMap}\r\n\r\n      </GoogleMapReact>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n// defaultProps = {\r\n//     center: {\r\n//       lat: 59.95,\r\n//       lng: 30.33\r\n//     },\r\n//     zoom: 20\r\n//   };\r\n\r\nexport default Map\r\n","import React, {useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { countryActions } from '../app/countrySlice'\r\nimport classes from './Header.module.scss'\r\n\r\nconst Header = () => {\r\n\r\n    const items = useSelector(state => state.country.items)\r\n    const menuIsShown = useSelector(state => state.country.menuIsShown)\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        if (window.innerWidth > 500) {\r\n            dispatch(countryActions.toggleMenu())\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n\r\n    const onChangeHandler = (value) => {\r\n        dispatch(countryActions.filterByQuantity(value))\r\n    }\r\n\r\n    const onChangeHandler2 = (value) => {\r\n        dispatch(countryActions.filterByLanguage(value))\r\n    }\r\n\r\n    const mobileMenuHandler = () => {\r\n        dispatch(countryActions.toggleMenu())\r\n    }\r\n\r\n    const onlyLanguages = items && items.map(el => {\r\n        const {languages} = el;\r\n        let arr = languages && Object.values(languages)\r\n        let arr2 = arr && arr.length > 1 ? arr.slice(0,1) : arr\r\n        let mainLanguage = arr2 && arr2[0]\r\n        return mainLanguage\r\n    })\r\n\r\n\r\n    const onlyUnique = (arr) => {\r\n        let newArr =  [];\r\n        for (const el of arr) {\r\n            if (!newArr.includes(el)) {\r\n                newArr.push(el)\r\n            }\r\n        }\r\n        return newArr\r\n    }\r\n\r\n    const uniqueLanguages = onlyUnique(onlyLanguages)\r\n\r\n    return (\r\n        <div className={classes.header}>\r\n            <h1>Узнай основные факты о стране (всего одним кликом!)</h1>\r\n            {/* <div>111</div> */}\r\n            <div className={classes.hamb__button} onClick={mobileMenuHandler}></div>\r\n            <div className={`${classes.navbar} ${menuIsShown && classes.navbar__isShown}`}>\r\n                <div className={classes.navbar__item}>\r\n                    <label htmlFor=\"population\">Показать на карте страны с численностью населения:</label>\r\n                    <select name=\"population\" id=\"population\" onChange={(e => onChangeHandler(e.target.value))}>\r\n                        <option defaultValue disabled>Выберите вариант</option>\r\n                        <option value={10000000}>Более 10млн человек</option>\r\n                        <option value={30000000}>Более 30млн человек</option>\r\n                        <option value={50000000}>Более 50млн человек</option>\r\n                        <option value={70000000}>Более 70млн человек</option>\r\n                        <option value={100000000}>Более 100млн человек</option>\r\n                    </select>\r\n                </div>\r\n                <div className={classes.navbar__item}>\r\n                    <label htmlFor=\"language\">Показать на карте страны, в которых выбранный ниже язык, является официальным:</label>\r\n                    <select name=\"language\" id=\"language\" onChange={e => onChangeHandler2(e.target.value)}>\r\n                    {uniqueLanguages && uniqueLanguages.map((el,i) => {\r\n                        return <option key={i} value={el}>{el}</option>\r\n                    })}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport classes from './Loader.module.scss'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={classes.loading}>\r\n            <div className={classes[`lds-dual-ring`]}> </div>\r\n            <h2>Подождите, идет загрузка...</h2>            \r\n           \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, {Fragment} from 'react'\r\nimport { countryActions } from '../app/countrySlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { motion } from 'framer-motion'\r\nimport classes from './Info.module.scss'\r\n\r\nconst Info = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const chosenCountry = useSelector(state => state.country.chosenCountry)\r\n\r\n\r\n    const clickHandler = () => {\r\n        dispatch(countryActions.hideInfo())\r\n        dispatch(countryActions.clearChosenCountry())\r\n    }\r\n\r\n    const numberWithSpaces = (number) => {\r\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    }\r\n\r\n    let convertedNumbersPopulation; \r\n    let totalArea;\r\n\r\n    if (chosenCountry) {\r\n        convertedNumbersPopulation = numberWithSpaces(chosenCountry[0].population) \r\n        totalArea = numberWithSpaces(chosenCountry[0].area) \r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        { chosenCountry && \r\n        <motion.div initial={{y: '-100vh'}} animate={{y: 0}} className={classes.info}>\r\n       <div className={classes.title}>\r\n           <div>{chosenCountry[0].name.common}</div> <br/>\r\n           <img src={chosenCountry[0].flags.svg}/>\r\n        </div>\r\n       <div className={classes.main}>\r\n            <div>Столица: {chosenCountry[0].capital}</div>\r\n            {/* <div>Площадь: {totalArea + 'км2'}</div> */}\r\n            <div>Движение на дороге: {chosenCountry[0].car.side}</div>\r\n            <div>Официальные языки в стране: {Object.values(chosenCountry[0].languages).map((el,i, arr) => { return i !== arr.length - 1 ? <span key={i}>{el}{', '}</span> : <span key={i}>{el}</span>\r\n            })}</div>\r\n            <div>Население: {convertedNumbersPopulation}</div>\r\n            <div>Валюта: {Object.values(chosenCountry[0].currencies).map((el, i) => {\r\n                return <span key={i}>{el.name}({el.symbol})</span>\r\n            })}</div>\r\n            <div>Местное время: {chosenCountry[0].timezones}</div> \r\n       </div>\r\n            <button onClick={clickHandler}>Скрыть</button>\r\n        </motion.div>  }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport Map from './components/Map';\nimport Header from './components/Header';\nimport Loader from './components/Loader';\nimport Info from './components/Info';\nimport {getData} from './app/actions'\nimport {useDispatch, useSelector} from 'react-redux';\n\nfunction App() {\n    const infoIsShown = useSelector(state => state.country.infoIsShown)\n    const items = useSelector(state => state.country.items)\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n      dispatch(getData());\n  }, [dispatch])\n\n  return (\n    <div className=\"app\">\n      <Header/>\n      {!items.length && <Loader />}\n      <Map/>\n      {infoIsShown ? <Info/> : false}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit'\nimport countryReducer from './countrySlice'\n\nexport const store = configureStore({\n  reducer: {\n      country: countryReducer\n  },\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__5Z_4S\",\"hamb__button\":\"Header_hamb__button__3SNrE\",\"navbar\":\"Header_navbar__27yZA\",\"navbar__item\":\"Header_navbar__item__uK6p3\",\"navbar__isShown\":\"Header_navbar__isShown__1WSrX\"};"],"sourceRoot":""}